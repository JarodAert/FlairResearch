<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<application>
    <packageName>lu.uni.serval.icc_bindservice1</packageName>
    <components>
        <Component>
            <type>activity</type>
            <name>lu.uni.serval.icc_bindservice1.OutFlowActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>lu.uni.serval.icc_bindservice1.InFlowService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>lu.uni.serval.icc_bindservice1.IsolateService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
    </components>
    <newIntents>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.OutFlowActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.OutFlowActivity</sender>
            <component>lu.uni.serval.icc_bindservice1.InFlowService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>piept4bolror5p1dtkhqbbefa7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>jd0l1rdd0j0hr6b95r0q5dsqbh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.InFlowService</sender>
            <component>lu.uni.serval.icc_bindservice1.OutFlowActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>ji8mujfuu225blconr3l1k5t9u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>h9t69162s28lig21mp09nhd2v5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>hkcj9ugddtqc97kn1h1jt209h7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>tu0nohiiamo6bi7v175coo4chh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.OutFlowActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.OutFlowActivity</sender>
            <component>lu.uni.serval.icc_bindservice1.InFlowService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>dbgtoec7iep6e3cbbh7sbvbtko</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>aqv35i1eern3h1iiaq6slc9l2p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>k2hqsvmhpj43napuh1d41ae201</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>3gqkt6hrlh5qjhkmicoo1a3fh0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.OutFlowActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.OutFlowActivity</sender>
            <component>lu.uni.serval.icc_bindservice1.InFlowService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>4sbl64r1vd98ldcdksjbnv6eci</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.OutFlowActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.OutFlowActivity</sender>
            <component>lu.uni.serval.icc_bindservice1.InFlowService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>q9p53kv9vc6cs5gis54cflelj8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>kovnk9c1g87cfor5o8mmg8r6sj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>jo2sihaa6g13bgf76heoa8jcnp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>kkd5lqo7pqd3do7q7sltriuqrk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>mluoufvdgvjqp248ahpslq3808</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.InFlowService</sender>
            <component>lu.uni.serval.icc_bindservice1.OutFlowActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>nbl5saauv3oq52p140hjmih3b5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>s4l4noe23cpah0gajrpivpcmqj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>ob04hq6vh73gl1shibq34eqh5f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice1.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice1.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>tgt0l393v8hj6gqblufbko2lsq</id>
            <random/>
        </Intent>
    </newIntents>
    <ContentProviders/>
    <usesPermissions>
        <permission>READ_PHONE_STATE</permission>
    </usesPermissions>
    <actuallyUsesPermissions>
        <permission>READ_PHONE_STATE</permission>
    </actuallyUsesPermissions>
    <requiredPermissions/>
    <apkFile>../../../app_repo/ICC_bindService1/InterCompCommunication_bindService1.apk</apkFile>
    <name>InterCompCommunication_bindService1</name>
</application>
