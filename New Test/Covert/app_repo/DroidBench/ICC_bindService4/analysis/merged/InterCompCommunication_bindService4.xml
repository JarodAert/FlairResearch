<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<application>
    <packageName>lu.uni.serval.icc_bindservice4</packageName>
    <components>
        <Component>
            <type>activity</type>
            <name>lu.uni.serval.icc_bindservice4.OutFlowActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
            <sensitiveFlows>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity$InnerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;</sinkCalledAt>
                    <source>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity$InnerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;</sourceCalledAt>
                    <sinkDomain>LOG</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity$InnerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;</sinkCalledAt>
                    <source>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity$InnerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;</sourceCalledAt>
                    <sinkDomain>LOG</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity$InnerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;</sinkCalledAt>
                    <source>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity$InnerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;</sourceCalledAt>
                    <sinkDomain>LOG</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity$InnerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;</sinkCalledAt>
                    <source>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity$InnerServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)&gt;</sourceCalledAt>
                    <sinkDomain>LOG</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
        </Component>
        <Component>
            <type>service</type>
            <name>lu.uni.serval.icc_bindservice4.InFlowService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</sinkCalledAt>
                    <source> virtualinvoke $r1.&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;("DroidBench") </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</sourceCalledAt>
                    <sinkDomain>LOG</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</sinkCalledAt>
                    <source> virtualinvoke $r1.&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;("DroidBench") </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</sourceCalledAt>
                    <sinkDomain>LOG</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
        </Component>
        <Component>
            <type>service</type>
            <name>lu.uni.serval.icc_bindservice4.IsolateService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</sinkCalledAt>
                    <source> virtualinvoke $r1.&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;("DroidBench") </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</sourceCalledAt>
                    <sinkDomain>LOG</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
        </Component>
    </components>
    <newIntents>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>arcio4dlvhhfr7vnr3hssupde1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>ruumon9fpjj1k3mf04d3eg6u2c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>6epon3fg0kb4ro98dt5m8t8alh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.InFlowService</sender>
            <component>lu.uni.serval.icc_bindservice4.OutFlowActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>itm0p7b50p7ldf08ab2upmjoip</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>e0a7jm0f3fd0uri285h1gs5ho4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.OutFlowActivity</sender>
            <component>lu.uni.serval.icc_bindservice4.InFlowService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sinkCalledAt>
                    <source> virtualinvoke $r0.&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity: java.lang.Object getSystemService(java.lang.String)&gt;("phone") </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>UNDEFINED</sourceDomain>
                </Flow>
                <Flow>
                    <sink>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sinkCalledAt>
                    <source> virtualinvoke $r5.&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;() </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>UNIQUE_IDENTIFIER</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>bindService</consumerMethod>
            <id>34o8jnkkfne3uv800dokflub6r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.OutFlowActivity</sender>
            <component>lu.uni.serval.icc_bindservice4.InFlowService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sinkCalledAt>
                    <source> virtualinvoke $r0.&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity: java.lang.Object getSystemService(java.lang.String)&gt;("phone") </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>UNDEFINED</sourceDomain>
                </Flow>
                <Flow>
                    <sink>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sinkCalledAt>
                    <source> virtualinvoke $r5.&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;() </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>UNIQUE_IDENTIFIER</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>bindService</consumerMethod>
            <id>7fs8mu185tu701i54oivvgnpvs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>1jpmmhsvtranmm26uh0qudtcf7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>f3ndg30pgilqpsub04j1535o1k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>pl0bgnrrb6hpncrbkco96kphlc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>qrufbqu3qaji04kf8qjr1b6i4k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>7gj0s7ivjfl86a6em8crkgimje</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.OutFlowActivity</sender>
            <component>lu.uni.serval.icc_bindservice4.InFlowService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sinkCalledAt>
                    <source> virtualinvoke $r0.&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity: java.lang.Object getSystemService(java.lang.String)&gt;("phone") </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>UNDEFINED</sourceDomain>
                </Flow>
                <Flow>
                    <sink>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sinkCalledAt>
                    <source> virtualinvoke $r5.&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;() </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>UNIQUE_IDENTIFIER</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>bindService</consumerMethod>
            <id>1uuf2n1i1h217qkhu6qeibq8dl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.InFlowService</sender>
            <component>lu.uni.serval.icc_bindservice4.OutFlowActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>9mvt5sc9np9kg6thm07rlifir2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>oq2n6vi71r5neg4gde15f53a9o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.InFlowService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.InFlowService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>evu2h5686h4ru0accf2017gpfg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>btsk60qio6avdp3ursv433tmt2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.util.Log: int i(java.lang.String,java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>LOG</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>i2lm4eu0dpscmjq9rg0tfnbhra</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.OutFlowActivity</sender>
            <component>lu.uni.serval.icc_bindservice4.InFlowService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sinkCalledAt>
                    <source> virtualinvoke $r0.&lt;lu.uni.serval.icc_bindservice4.OutFlowActivity: java.lang.Object getSystemService(java.lang.String)&gt;("phone") </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>UNDEFINED</sourceDomain>
                </Flow>
                <Flow>
                    <sink>&lt;android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)&gt;("DroidBench", $r3) </sink>
                    <sinkCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sinkCalledAt>
                    <source> virtualinvoke $r5.&lt;android.telephony.TelephonyManager: java.lang.String getDeviceId()&gt;() </source>
                    <sourceCalledAt>lu.uni.serval.icc_bindservice4.OutFlowActivity: void onCreate(android.os.Bundle)</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>UNIQUE_IDENTIFIER</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>bindService</consumerMethod>
            <id>7138jenu3smgfattja85e8gom1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)</calledAt>
            <sender>lu.uni.serval.icc_bindservice4.IsolateService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <sensitiveFlows>
                <Flow>
                    <sink>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</sink>
                    <sinkCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sinkCalledAt>
                    <source>Returned Value</source>
                    <sourceCalledAt>&lt;lu.uni.serval.icc_bindservice4.IsolateService: android.os.IBinder onBind(android.content.Intent)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
            <consumerMethod>binder</consumerMethod>
            <id>u9d4bds59rjn53tt9d198t66b4</id>
            <random/>
        </Intent>
    </newIntents>
    <ContentProviders/>
    <usesPermissions>
        <permission>READ_PHONE_STATE</permission>
    </usesPermissions>
    <actuallyUsesPermissions>
        <permission>READ_PHONE_STATE</permission>
    </actuallyUsesPermissions>
    <requiredPermissions/>
    <apkFile>../../../app_repo/ICC_bindService4/InterCompCommunication_bindService4.apk</apkFile>
    <name>InterCompCommunication_bindService4</name>
</application>
